name: ci/cd
on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch:

jobs:
  build-and-push-hypebot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@3d58c274f17dffee475a5520cbe67f0a882c4dbb
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c
        with:
          images: ghcr.io/sonastea/hypebot

      - name: Build and push hypebot docker image
        uses: docker/build-push-action@9f6f8c940b91232557f8699b21341a08624a8dce
        with:
          context: .
          file: ./docker/hypebot/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-hypeserver:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@3d58c274f17dffee475a5520cbe67f0a882c4dbb
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c
        with:
          images: ghcr.io/sonastea/hypeserver

      - name: Build and push hypeserver docker image
        uses: docker/build-push-action@9f6f8c940b91232557f8699b21341a08624a8dce
        with:
          context: .
          file: ./docker/hypeserver/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deployment:
    needs: [build-and-push-hypebot, build-and-push-hypeserver]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy and run docker container
        uses: appleboy/ssh-action@9b978f09f2587beff9c80449f57cb0f0612d3039
        env:
          TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            cd $(pwd)/hypebot
            git restore .
            git pull
            docker compose down --rmi local
            docker compose up -d --force-recreate --pull always
